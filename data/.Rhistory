data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
fit12 = lm(Mortality~.,data12)
coef = names(coef(fit11,7)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
anova(fit11,fit12)
which.min(cp)
plot(cp)
cp
fit11 = regsubsets(Mortality~.,data=dataP,nvmax=13,force.out=c("HC","NOX","SO2"),really.big = TRUE,nbest=1)
cp = summary(fit11)$cp
plot(cp)
fit11 = regsubsets(Mortality~.,data=dataP,nvmax=13,force.out=c("HC","NOX","SO2"),nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
which.min(cp)
anova(fit11,fit12)
data("ex1217")
dataP = ex1217[,-1]
fit11 = regsubsets(Mortality~.,data=dataP,nvmax=13,force.out=c("HC","NOX","SO2"),nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
coef = names(coef(fit11,7)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
coef = names(coef(fit11,7)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
cp = summary(fit11)$cp
which.min(cp)
cp
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
which.min(cp)
BIC = summary(fit11)$bic
plot(BIC)
?transmute
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
data12 = ex1217[,coef]
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
coef = c("Mortality",coef)
coef = c(coef,"HC","NOX","SO2")
coef
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef
coef = c("Mortality",coef)
coef
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
coef
data12 = ex1217[,coef]
data12 = transmute(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
str(data12)
data12 = ex1217[,coef]
data12 = mutate(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
str(data12)
?mutate
data12 = mutate_(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
data12 = ex1217[,coef]
data12 = mutate_(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
str(data12)
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,HC = log(HC),NOX = log(NOX), SO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
?regsubsets
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1,method = "forward")
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,HC = log(HC),NOX = log(NOX), SO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
str(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = Area)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = "Area")
which.min(summary(fit21)$cp)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
k
str(ex1220)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef = c("Total",coef)
data21 = ex1217[,coef]
fit11 = lm(Total~.,data21)
data21 = ex1220[,coef]
fit11 = lm(Total~.,data21)
coef
str(ex1220)
data = select(ex1220,-Island,-Native)
str(data)
fit21 = regsubsets(Total~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data = select(ex1220,-Island,-Total)
fit21 = regsubsets(Native~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
data = select(ex1220,-Island,-Total)
str(data)
fit21 = regsubsets(Native~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
data = select(ex1220,-Island,-Total)
fit21 = regsubsets(Native~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data = ex1220 %>%
mutate(Native = Total-Native)%>%
select(-Island,-Total)
fit21 = regsubsets(Native~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data(ex2011)
str(ex2011)
data(ex2011)
logit3 <- glm(Failure ~ Temperature, ex2011,family = "binomial")
logit3
summary(logit3)
?wald.test
??wald.test
install.packages("aod")
library("aod")
coef(logit3)
wald.test(b = coef(logit), Sigma = vcov(logit), Terms = 2)
data(ex2011)
logit <- glm(Failure ~ Temperature, ex2011,family = "binomial")
summary(logit)
library("aod")
wald.test(b = coef(logit), Sigma = vcov(logit), Terms = 2)
?wald.test
str(ex2011)
data(ex2011)
logit <- glm(Failure ~ Temperature, ex2011,family = "binomial")
summary(logit)
pnorm(-2.053)
anova(logit)
anova(logit,test="F")
?"anova.glm"
anova(logit,test="LRT")
summary(logit)
confint.default(logit)
prob = predict.glm(logit, data.frame(Temperature = 31), type="response")
prob
prob1 = predict.glm(logit)
prob1
prob = predict.glm(logit, data.frame(Temperature = 31), type="response")
problogit = predict.glm(logit, data.frame(Temperature = 31))
problogit
data(ex2015)
str(ex2015)
?t.test
Site
attach(ex2015)
Site
attach(ex2015)
for(i in 1:7){
print("for ring", k)
t.test(ex2015[1:30,i+1],ex2015[31:60,i+1])
}
attach(ex2015)
for(i in 1:7){
print("for ring", k)
print(t.test(ex2015[1:30,i+1],ex2015[31:60,i+1]))
}
i = 1
play = t.test(ex2015[1:30,i+1],ex2015[31:60,i+1])
play$p.value
attach(ex2015)
for(i in 1:7){
print("for ring", as.character(k),"the p value is")
print(t.test(ex2015[1:30,i+1],ex2015[31:60,i+1],alternative="less")$p.value)
}
attach(ex2015)
p = vector()
for(i in 1:7){
p = c(p,t.test(ex2015[1:30,i+1],ex2015[31:60,i+1],alternative="less")$p.value)
}
p
str(eex2015)
str(ex2015)
logit = lgm(Site~.,ex2015,family = "binomial")
logit = glm(Site~.,ex2015,family = "binomial")
logit
summary(logit)
Y = c(0,0,1,1)
X = c(-2,-1,1,2)
logit = glm(Y ~ X -1, family = "binomial")
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X -1, family = "binomial")
logit
predict.glm(logit,data.frame(X=0.5))
predict.glm(logit,data.frame(X=0.5),type = "response")
predict.glm(logit,data.frame(X=0.5),type = "response")
beta = -50:50
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
?Logit
??logit
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
beta = -50:50
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = -30:30
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = -25:25
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = 1:25
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:25
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
plot(beta,logL)
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:30
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:30
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
plot(beta,logL)
setwd("~/Data Science/project4-team6/data")
library(igraph)
library(bipartite)
library(intergraph)
computeModules
# data = read.csv("datawithnameandgenre.csv")
# attach(data)
# matData = data.frame(product_productid,review_userid,review_score,V1.1)
# colnames(matData) = c("pId","uId","score","name")
# save(matData,file = "matData.RData")
# g <- make_empty_graph() +
#                  vertices(letters[1:10]) +
#                  vertices("foo", "bar", "bar2", "foobar2")
#           g <- g + edge("a", "b",weight = 3)
#
# as.matrix.igraph(g,matrix.type = "adjacency")
# sampledata <- rbind(
#     c(1,2,4),
#     c(1,3,2),
#     c(2,1,4),
#     c(2,3,4),
#     c(2,4,1),
#     c(2,5,2),
#     c(3,1,2),
#     c(3,2,4),
#     c(4,2,1),
#     c(5,2,2),
#     c(5,6,1),
#     c(6,5,1))
# playdata = cbind(data$product_productid,data$review_userid,data$review_score)[1:500,]
# system.time(adjMat = frame2webs(matData,varnames = c("uId","pId","score")))
data(Safariland)
plotweb(Safariland)
clustering_tm(Safariland)
compart(Safariland)
fc(Safariland)
fc(playData)
computeModules()
data(small1976)
res <- computeModules(small1976)
# data = read.csv("datawithnameandgenre.csv")
# attach(data)
# matData = data.frame(product_productid,review_userid,review_score,V1.1)
# colnames(matData) = c("pId","uId","score","name")
# save(matData,file = "matData.RData")
# g <- make_empty_graph() +
#                  vertices(letters[1:10]) +
#                  vertices("foo", "bar", "bar2", "foobar2")
#           g <- g + edge("a", "b",weight = 3)
#
# as.matrix.igraph(g,matrix.type = "adjacency")
# sampledata <- rbind(
#     c(1,2,4),
#     c(1,3,2),
#     c(2,1,4),
#     c(2,3,4),
#     c(2,4,1),
#     c(2,5,2),
#     c(3,1,2),
#     c(3,2,4),
#     c(4,2,1),
#     c(5,2,2),
#     c(5,6,1),
#     c(6,5,1))
# playdata = cbind(data$product_productid,data$review_userid,data$review_score)[1:500,]
# system.time(adjMat = frame2webs(matData,varnames = c("uId","pId","score")))
data(Safariland)
plotweb(Safariland)
clustering_tm(Safariland)
compart(Safariland)
fc(Safariland)
fc(playData)
computeModules()
data(small1976)
res <- computeModules(small1976)
# data = read.csv("datawithnameandgenre.csv")
# attach(data)
# matData = data.frame(product_productid,review_userid,review_score,V1.1)
# colnames(matData) = c("pId","uId","score","name")
# save(matData,file = "matData.RData")
# g <- make_empty_graph() +
#                  vertices(letters[1:10]) +
#                  vertices("foo", "bar", "bar2", "foobar2")
#           g <- g + edge("a", "b",weight = 3)
#
# as.matrix.igraph(g,matrix.type = "adjacency")
# sampledata <- rbind(
#     c(1,2,4),
#     c(1,3,2),
#     c(2,1,4),
#     c(2,3,4),
#     c(2,4,1),
#     c(2,5,2),
#     c(3,1,2),
#     c(3,2,4),
#     c(4,2,1),
#     c(5,2,2),
#     c(5,6,1),
#     c(6,5,1))
# playdata = cbind(data$product_productid,data$review_userid,data$review_score)[1:500,]
# system.time(adjMat = frame2webs(matData,varnames = c("uId","pId","score")))
data(Safariland)
plotweb(Safariland)
clustering_tm(Safariland)
compart(Safariland)
fc(Safariland)
fc(playData)
computeModules()
data(small1976)
res <- computeModules(small1976)
plotModuleWeb(res)
# data = read.csv("datawithnameandgenre.csv")
# attach(data)
# matData = data.frame(product_productid,review_userid,review_score,V1.1)
# colnames(matData) = c("pId","uId","score","name")
# save(matData,file = "matData.RData")
# g <- make_empty_graph() +
#                  vertices(letters[1:10]) +
#                  vertices("foo", "bar", "bar2", "foobar2")
#           g <- g + edge("a", "b",weight = 3)
#
# as.matrix.igraph(g,matrix.type = "adjacency")
# sampledata <- rbind(
#     c(1,2,4),
#     c(1,3,2),
#     c(2,1,4),
#     c(2,3,4),
#     c(2,4,1),
#     c(2,5,2),
#     c(3,1,2),
#     c(3,2,4),
#     c(4,2,1),
#     c(5,2,2),
#     c(5,6,1),
#     c(6,5,1))
# playdata = cbind(data$product_productid,data$review_userid,data$review_score)[1:500,]
# system.time(adjMat = frame2webs(matData,varnames = c("uId","pId","score")))
data(Safariland)
plotweb(Safariland)
clustering_tm(Safariland)
compart(Safariland)
fc(Safariland)
fc(playData)
computeModules()
data(small1976)
res <- computeModules(small1976)
sampledata <- rbind(
c(1,2,4),
c(1,3,2),
c(2,1,4),
c(2,3,4),
c(2,4,1),
c(2,5,2),
c(3,1,2),
c(3,2,4),
c(4,2,1),
c(5,2,2),
c(5,6,1),
c(6,5,1))
data(Safariland)
clustering_tm(Safariland)
compart(Safariland)
load("adjMat.RData")
rm(list = ls())
